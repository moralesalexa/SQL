# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 


SELECT * FROM BIT_DB.Spotifydata ;

SELECT popularity, artist_name, track_name FROM BIT_DB.Spotifydata 
WHERE popularity > 90 
ORDER BY popularity DESC ;

WITH pop_avg_CTE AS (SELECT s.artist_name, AVG(s.popularity) AS average_popularity FROM Spotifydata s GROUP BY s.artist_name ) 
SELECT artist_name , average_popularity, 'Top Star' AS tag FROM pop_avg_CTE WHERE average_popularity >= 90 ORDER BY average_popularity DESC;


SELECT artist_name, track_name, (duration_ms / (1000)) as seconds FROM BIT_DB.Spotifydata 
ORDER BY seconds DESC LIMIT 10;

SELECT MIN(tempo), MAX(tempo), AVG(tempo) FROM BIT_DB.Spotifydata ;
SELECT MIN(loudness), MAX(loudness), AVG(loudness) FROM BIT_DB.Spotifydata; 


SELECT artist_name, track_name, tempo, loudness FROM BIT_DB.Spotifydata AS running_playlist
WHERE tempo > (SELECT AVG(tempo) FROM BIT_DB.Spotifydata) AND loudness > (SELECT AVG(loudness) FROM BIT_DB.Spotifydata) ;


SELECT song_key, COUNT(song_key) AS key_frequency FROM BIT_DB.Spotifydata GROUP BY song_key ORDER BY key_frequency DESC LIMIT 1
 ;
 
SELECT artist_name, track_name FROM BIT_DB.Spotifydata WHERE song_key = 1 ;

WITH pop_avg_CTE AS (SELECT s.artist_name, AVG(s.popularity) AS average_popularity FROM Spotifydata s GROUP BY s.artist_name ) 
SELECT artist_name , average_popularity, 'Top Star' AS tag FROM pop_avg_CTE WHERE average_popularity >= 90 ORDER BY average_popularity DESC;

